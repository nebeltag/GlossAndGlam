.header {
  background-color: #1B1B1B;

  // .header__container

  &__container {
    display: grid;
    grid-template-columns: auto 1fr auto;
    @include adaptiveValue("min-height", 136, 60);
    align-items: center;
    padding-top: toRem(10);
    padding-bottom: toRem(10);
    gap: toRem(15);
  }

  // .header__logo

  &__logo {

    &-image {
      @include adaptiveValue("width", 204, 100);
    }

    @media (any-hover: hover) {
      &:hover {
        transform: scale(1.01);
      }
    }
  }

  // .header__menu

  &__menu {}

  // .header__action

  &__action {}
}

.menu {

  // .menu__icon

  &__icon {}

  // .menu__body

  &__body {}

  // .menu__list

  &__list {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    @include adaptiveValue("column-gap", 32, 11, 0, $containerWidth, 767.98);
    row-gap: toRem(5);
    @include adaptiveValue("font-size", 16, 11);
  }

  // .menu__item

  &__item {
    position: relative;
  }

  // .menu__link

  &__link {
    display: inline-block;
    line-height: 150%;
    font-weight: 400;
    background-image: linear-gradient($goldColor, $goldColor);
    background-position: bottom right;
    background-repeat: no-repeat;
    background-size: 0% 2px;
    transition: background-size .25s ease-out;

    @media(any-hover:hover) {
      &:hover {
        background-size: 100% 2px;
        background-position: bottom left;
        color: $goldColor;
      }
    }

    &:active {
      color: $mainColor;
      background-image: linear-gradient($mainColor, $mainColor);
      transition: all .1s linear;
    }


  }
}


.services-menu {
  &::after {
    position: relative;
    @extend %ic;
    content: "\e901";
    line-height: 11px;
    margin-left: toRem(4);
    @include adaptiveValue("font-size", 12, 8);
  }

  &__list {
    position: absolute;
    opacity: 0;
    visibility: hidden;
    top: -850%;
    right: 0;
    min-width: toEm(150);
    border: 1px solid $goldColor;
    border-radius: toRem(12);
    padding: toRem(10) toRem(2);
    transform: rotateZ(-90deg);
    //transition: transform .5s;
  }

  &__list._show-services {
    opacity: 1;
    visibility: visible;
    transform: translate(0, 130%);
    z-index: 5;
    transition: transform .5s cubic-bezier(0.165, 0.84, 0.44, 1);

  }

  &__item {
    position: relative;
    text-align: center;
    border-radius: toRem(5);


    &:not(:last-child) {
      margin-bottom: toRem(10);
    }

    @media (any-hover: hover) {
      &:hover {
        background: linear-gradient(rgb(87, 88, 94), rgb(43, 43, 43)) rgb(110, 112, 120);
        color: $goldColor;
        box-shadow:
          0 1px rgba(255, 255, 255, .2) inset,
          0 2px 3px rgba(0, 1, 6, .5),
          0 0 1px 1px rgba(0, 1, 6, .2);
        transition: background-color .2s ease-in-out;
        transform: scale(1.03);
      }
    }

    &:active {
      top: 1px;
      background: linear-gradient(rgb(76, 77, 82), rgb(56, 57, 62)) rgb(76, 77, 82);
      box-shadow:
        0 0 1px rgba(0, 0, 0, .5) inset,
        0 2px 3px rgba(0, 0, 0, .5) inset,
        0 1px 1px rgba(255, 255, 255, .1);
    }
  }

  &__link {
    line-height: 150%;
    letter-spacing: 1px;
  }
}

.services-menu._show-services {

  &::after {
    transform: rotate(180deg);
    top: toRem(-2);

  }
}



.action-header {
  position: relative;
  justify-self: end;
  display: flex;
  justify-content: flex-end;
  flex-wrap: wrap;
  align-items: center;
  @include adaptiveValue("column-gap", 24, 12, 0, $containerWidth, 767.98);
  row-gap: toRem(3);


  // .action-header__link

  &__link {
    display: inline-block;
    @include adaptiveValue("width", 32, 30, 0, $containerWidth, 767.98);
    @include adaptiveValue("height", 32, 30, 0, $containerWidth, 767.98);
    // width: 32px;
    // height: 32px;
    background-color: $goldColor;
    border-radius: 50%;
    transition: all .5s;

    &::before {
      position: relative;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: $bgMainColor;
      font-weight: 600;
      border: toRem(1) solid transparent;
    }

    @media (any-hover: hover) {
      &:hover {
        background-color: transparent;
        border: toRem(2) solid $goldColor;
        transition: color .5s;

        &::before {
          color: $goldColor;
          transition: color .5s;
        }
      }
    }

    &:active {
      border: toRem(2) solid $mainColor;
      transform: scale(.95);
      transition: all .3s;

      &::before {
        color: $mainColor;
        transition: all .3s;
      }
    }
  }
}

.action-header {

  // .action-header__form

  &__search {
    position: absolute;
    left: 0;
    bottom: -80%;
  }
}

.header-search {

  //outline: toRem(1) solid $goldColor;
  border-radius: 5px;


  // .header-search__form

  &__form {
    display: flex;
    height: toRem(30);
    opacity: 0;
    visibility: hidden;
    transition: all .5s;
    animation: slidein 5s reverse ease;


    @media (min-width:$mobile) {
      max-width: toRem(350);
    }


    input {
      outline: toRem(1) solid $mainColor;
      border-radius: 5px 0 0 5px;
      flex: 1 1 auto;
      padding: toRem(4);

      &:focus {
        outline: toRem(2) solid $goldColor;
      }
    }

    button {
      margin-left: toRem(8);
      padding: toRem(0) toRem(5);
      border-radius: 5px;
      font-weight: 500;
      color: $bgMainColor;
      background-color: $goldColor;
      border: 1px solid $goldColor;
      appearance: none;
      transition: all 150ms ease-in-out;

      @media (any-hover: hover) {
        &:hover {
          color: $goldColor;
          background-color: transparent;
          box-shadow: 0 0 5px 0 $goldColor inset, 0 0 5px 2px $goldColor;
        }
      }

      &:active {
        color: $mainColor;
        box-shadow: 0 0 5px 0 $mainColor inset, 0 0 5px 2px $mainColor;
      }
    }

    @keyframes slidein {
      from {
        width: 0;
      }

      to {
        width: 100%;
      }
    }
  }

  &__form._show-action-search-form {
    opacity: 1;
    visibility: visible;
  }


}


//=====================================================
//burger
.icon-menu {
  display: none;

  @media (max-width: $mobile) {
    display: block;
    position: relative;
    width: toRem(30);
    height: toRem(18);
    z-index: 5;

    @media (any-hover: none) {
      cursor: default;
    }

    span,
    &::before,
    &::after {
      content: "";
      transition: all 0.3s ease 0s;
      right: 0;
      position: absolute;
      width: 100%;
      height: toRem(2);
      background-color: #000;
    }

    &::before {
      top: 0;
    }

    &::after {
      bottom: 0;
    }

    span {
      top: calc(50% - toRem(1));
    }

    .menu-open & {
      span {
        width: 0;
      }

      &::before,
      &::after {}

      &::before {
        top: calc(50% - toRem(1));
        transform: rotate(-45deg);
      }

      &::after {
        bottom: calc(50% - toRem(1));
        transform: rotate(45deg);
      }
    }
  }
}